@using ProMats.Function
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor

<style>
    .badge {
        width: 100px; /* Set your desired width */
        display: inline-block;
        text-align: center;
    }
</style>

<div class="content" style="margin-top:-1rem">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 mt-3 mb-2">
                <div class="row">
                    <div class="col-12 mt-3">
                        <div class="card mb-4">
                            <div class="card-header text-center">
                                <h5 class="mb-0">PO Finish Good Tracking Stock</h5>
                            </div>
                            <div class="table-responsive p-3" id="FilteredTable">
                                <!-- Table content goes here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- EDIT MODAL -->
<div class="modal fade" id="modal_edit" aria-labelledby="addPartModalLabel">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white text-center">
                <h5 class="modal-title" id="addPartModalLabel">UPDATE STOCK</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3" hidden>
                    <label for="id_part" class="form-label">ID</label>
                    <input type="text" class="form-control" id="id_det" name="id_det" required>
                </div>
                <div class="mb-3">
                    <label for="part_code" class="form-label">Part Code</label>
                    <input type="text" class="form-control" id="part_code" name="part_code" readonly>
                </div>
                <div class="mb-3">
                    <label for="part_name" class="form-label">Part Name</label>
                    <input type="text" class="form-control" id="part_name" name="part_name" required readonly>
                </div>
                <div class="mb-3">
                    <label for="stock" class="form-label">Stock</label>
                    <input type="number" class="form-control" id="total_stock" value="0" name="total_stock" required>
                </div>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" style="width:30%">Close</button>
                <button type="button" class="btn btn-dark" onclick="submitEditPart()" style="width:30%">Update</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            setTimeout(function () {
                fetch_data();
            }, 1000);

            $('#total_stock').on('input', function () {
                if ($(this).val() < 0) {
                    $(this).val('');
                    Swal.fire({
                        icon: 'warning',
                        title: 'Invalid Stock',
                        text: 'Stock must be 0 or more!',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });

        function btn_edit(id_det, part_code, part_name, total_stock) {
            $('#id_det').val(id_det)
            $('#part_code').val(part_code)
            $('#part_name').val(part_name)
            $('#total_stock').val(total_stock ? parseInt(total_stock.toString().replace(',', '.')) : '');

            $("#modal_edit").modal('show');
        }

        function submitEditPart() {
            var id_det = $('#id_det').val();
            var part_code = $('#part_code').val();
            var total_stock = $('#total_stock').val();

            if (total_stock === '' || total_stock === null) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please fill in all the required fields!'
                });
                return;
            }

            Swal.fire({
                title: "Are you sure?",
                text: 'Update Stock?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#dc3545',
                confirmButtonText: 'Yes!',
                cancelButtonText: 'No!',
                showLoaderOnConfirm: true,
                preConfirm: function () {
                    return new Promise(function (resolve, reject) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("UPDATE_STOCK_POFINISH", "PMC")", // Ensure this is correctly generated by Razor
                            data: {
                                id_det: id_det,
                                part_code: part_code,
                                total_stock: total_stock
                            },
                            success: function (data) {
                                if (data.success) {
                                    Swal.fire({
                                        title: 'Added!',
                                        text: 'Your PO Finish Good Stock has been Update.',
                                        icon: 'success'
                                    });
                                    setTimeout(function () {
                                        location.reload();
                                    }, 1000);
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: data.message || 'An error occurred.'
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'An error occurred during the AJAX request.'
                                });
                            }
                        });
                    });
                }
            });
        }

        function fetch_data() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GET_FG_TRACKING", "PMC")",
                data: {
                },
                success: function (data) {
                    $("#FilteredTable").html(data);
                    initializeDataTable();
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching forecast data:', error);
                    alert('An error occurred while fetching the forecast data. Please try again.'); // User-friendly message
                }
            });
        }

        function initializeDataTable() {
            var table = $("#tbl_history");
            if (table.length > 0) {
                table.DataTable({
                    "paging": true,
                    "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                    "pageLength": 10,
                    "autoWidth": false,
                    "destroy": true,
                    "ordering": true,
                    "responsive": true
                });
            } else {
                console.log("Table element not found");
            }
        }

    </script>
}